

BFS（Breath First Search）：广度优先搜索，BFS找到的路径"一定是最短的"，但是空间复杂度比DFS（深度优先搜索）要大很多

BSF常用的场景：
问题的本质：就是在一幅"图"中从起点start 到终点 target 的最短距离

代码框架：
    int BFS(Node start, Node target) {
        Queue<Node> q; // 核心数据结构
        Set<Node> visited; // 避免走回头路

        q.offer(start); // 将起点加入队列
        visited.add(start);
        int step = 0; // 记录扩散的步数

        while(q not empty) {
            int size = q.size();
            /* 将当前队列中的所有节点想四周扩散 */
            for(int i = 0; i < size; i++) {
                Node cur = q.poll();
                /** 划重点：判断是否到达终点 **/
                if(cur is target) {
                    return step;
                }

                /* 将 cur 的相邻节点加入队列 */
                for (Node x : cur.adj()) {
                    if(x not in visited) {
                        q.offer(x);
                        visited.add(x);
                    }
                }
            }
            /** 划重点：在for外面，当前节点的相邻节点都遍历完了之后，更新步数 **/
            step++;
        }
    }

1、为什么BFS可以找到最短路径，DFS行不行？
    DFS也是可以的，DFS靠栈记录走过的路径，时间复杂度也是O(N)，不过 DFS 是线， BFS是面，BFS 高效一些
2、BFS和DFS比较
    bfs空间复杂度高，dfs空间复杂度低
